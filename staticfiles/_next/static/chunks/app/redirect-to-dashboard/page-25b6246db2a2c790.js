(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[238],{2525:function(e,t,r){Promise.resolve().then(r.bind(r,6747))},9376:function(e,t,r){"use strict";var a=r(5475);r.o(a,"usePathname")&&r.d(t,{usePathname:function(){return a.usePathname}}),r.o(a,"useRouter")&&r.d(t,{useRouter:function(){return a.useRouter}}),r.o(a,"useSearchParams")&&r.d(t,{useSearchParams:function(){return a.useSearchParams}})},6747:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return i}});var a=r(7437),o=r(2265),s=r(9376),n=r(9636);function i(){let e=(0,s.useRouter)();return(0,o.useEffect)(()=>{n.ZP.isAuthenticated()?e.push("/dashboard"):e.push("/?signup=true")},[e]),(0,a.jsx)("div",{className:"min-h-screen bg-darkmode flex items-center justify-center",children:(0,a.jsx)("div",{className:"text-white text-xl",children:"Redirecting..."})})}},9636:function(e,t,r){"use strict";r.d(t,{CT:function(){return a}});let a="".concat("https://www.qfsvaultledger.org","/api");class o{handleApiError(e,t){let r="An unexpected error occurred";throw t.error?r=t.error:t.message?r=t.message:t.detail?r=t.detail:400===e.status?r="Invalid request. Please check your input.":401===e.status?r="Invalid credentials. Please check your email and password.":403===e.status?r="Access denied. Your account may be disabled.":404===e.status?r="User not found. Please check your email or sign up.":409===e.status?r="Email already exists. Please use a different email.":e.status>=500&&(r="Server error. Please try again later."),Error(r)}async register(e){try{let t=await fetch("".concat(a,"/auth/register/"),{method:"POST",headers:{"Content-Type":"application/json","ngrok-skip-browser-warning":"true"},body:JSON.stringify(e)}),r=await t.json();return t.ok||this.handleApiError(t,r),this.storeTokens(r.tokens),r}catch(e){if("TypeError"===e.name&&e.message.includes("fetch"))throw Error("Network error. Please check your connection and try again.");throw e}}async login(e){try{let t=await fetch("".concat(a,"/auth/login/"),{method:"POST",headers:{"Content-Type":"application/json","ngrok-skip-browser-warning":"true"},body:JSON.stringify(e)}),r=await t.json();return t.ok||this.handleApiError(t,r),this.storeTokens(r.tokens),r}catch(e){if("TypeError"===e.name&&e.message.includes("fetch"))throw Error("Network error. Please check your connection and try again.");throw e}}async getProfile(){let e=await this.authenticatedRequest("".concat(a,"/auth/profile/")),t=await e.json();if(!e.ok)throw Error(t.error||"Failed to get user profile");return t.user}storeTokens(e){localStorage.setItem("access_token",e.access),localStorage.setItem("refresh_token",e.refresh)}getAccessToken(){return localStorage.getItem("access_token")}getRefreshToken(){return localStorage.getItem("refresh_token")}isAuthenticated(){return!!this.getAccessToken()}logout(){localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token")}async refreshToken(){let e=this.getRefreshToken();if(!e)throw Error("No refresh token found");let t=await fetch("".concat(a,"/token/refresh/"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refresh:e})}),r=await t.json();if(!t.ok)throw Error("Failed to refresh token");return localStorage.setItem("access_token",r.access),r.access}async authenticatedRequest(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=this.getAccessToken();if(!r)throw Error("No access token found");let a={Authorization:"Bearer ".concat(r),...t.headers};t.body instanceof FormData||(a["Content-Type"]="application/json");let o=await fetch(e,{...t,headers:a});if(401===o.status)try{r=await this.refreshToken();let a={Authorization:"Bearer ".concat(r),...t.headers};t.body instanceof FormData||(a["Content-Type"]="application/json"),o=await fetch(e,{...t,headers:a})}catch(e){console.warn("Token refresh failed, but keeping user logged in:",e)}return o}async changePassword(e){let t=await this.authenticatedRequest("".concat(a,"/auth/change-password/"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({current_password:e.currentPassword,new_password:e.newPassword})}),r=await t.json();if(!t.ok)throw Error(r.error||"Failed to change password");return r}async submitKYCDocument(e){let t=await this.authenticatedRequest("".concat(a,"/kyc/submit/"),{method:"POST",body:e}),r=await t.json();if(!t.ok)throw Error(r.error||"Failed to submit document");return r}async getKYCStatus(){let e=await this.authenticatedRequest("".concat(a,"/kyc/status/")),t=await e.json();if(!e.ok)throw Error(t.error||"Failed to get KYC status");return t}async getAdminKYCList(){let e=await this.authenticatedRequest("".concat(a,"/admin/kyc/")),t=await e.json();if(!e.ok)throw Error(t.error||"Failed to get KYC submissions");return t}async requestPasswordReset(e){try{let t=await fetch("".concat(a,"/auth/forgot-password/"),{method:"POST",headers:{"Content-Type":"application/json","ngrok-skip-browser-warning":"true"},body:JSON.stringify({email:e})}),r=await t.json();return t.ok||this.handleApiError(t,r),r}catch(e){if("TypeError"===e.name&&e.message.includes("fetch"))throw Error("Network error. Please check your connection and try again.");throw e}}async resetPassword(e,t){try{let r=await fetch("".concat(a,"/auth/reset-password/"),{method:"POST",headers:{"Content-Type":"application/json","ngrok-skip-browser-warning":"true"},body:JSON.stringify({token:e,password:t})}),o=await r.json();return r.ok||this.handleApiError(r,o),o}catch(e){if("TypeError"===e.name&&e.message.includes("fetch"))throw Error("Network error. Please check your connection and try again.");throw e}}async reviewKYCSubmission(e,t,r){let o=await this.authenticatedRequest("".concat(a,"/admin/kyc/").concat(e,"/review/"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:t,notes:r})}),s=await o.json();if(!o.ok)throw Error(s.error||"Failed to review KYC submission");return s}getApiBaseUrl(){return a}}let s=new o;t.ZP=s}},function(e){e.O(0,[971,117,744],function(){return e(e.s=2525)}),_N_E=e.O()}]);